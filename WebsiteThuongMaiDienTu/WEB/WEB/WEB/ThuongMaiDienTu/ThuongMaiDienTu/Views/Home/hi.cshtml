<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.1/font/bootstrap-icons.css">

@* <button type="button" class="btn btn-primary" id="liveToastBtn">Show live toast</button>

    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <img src="..." class="rounded me-2" alt="...">
                <strong class="me-auto">Bootstrap</strong>
                <small>11 mins ago</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                Hello, world! This is a toast message.
            </div>
        </div>
    </div>*@

@*<div style="background-color:black; height:800px;">
        <div id="carouselExampleIndicators" class="carousel slide container">
            <div class="carousel-indicators row" style="margin-bottom:700px;">
                <div class="row">
                    <div class="col-md-2 col-4">
                        Tất Cả Đơn Hàng
                    </div>
                    <div class="col-md-2 col-4">
                        Chờ Thanh Toán
                    </div>
                    <div class="col-md-2 col-4">
                        Đang Xử Lý
                    </div>
                    <div class="col-md-2 col-4">
                        Đang Vận Chuyển
                    </div>
                    <div class="col-md-2 col-4">
                        Đã Giao
                    </div>
                    <div class="col-md-2 col-4">
                        Đã Hủy
                    </div>
                </div>
                <div class="col-md-2 col-4">
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-label="Slide 1" value="Tất Cả Đơn Hàng"></button>
                </div>
                <div class="col-md-2 col-4">
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
                </div>
                <div class="col-md-2 col-4">
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
                </div>
                <div class="col-md-2 col-4">
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="3" aria-label="Slide 4"></button>
                </div>
                <div class="col-md-2 col-4">
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="4" aria-label="Slide 5"></button>
                </div>
                <div class="col-md-2 col-4">
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="5" aria-label="Slide 6"></button>
                </div>
            </div>
            <div class="carousel-inner">
                <div class="carousel-item active h-100 w-100 bg-danger">
                    có gì đó ở đây
                </div>
                <div class="carousel-item h-100 w-100 bg-info">
                    ảnh thứu 32
                </div>
                <div class="carousel-item h-100 w-100 bg-secondary">
                    tiếp theo
                </div>
                <div class="carousel-item h-100 w-100 bg-dark">
                    tiếp theo
                </div>
                <div class="carousel-item h-100 w-100 bg-success">
                    số 5
                </div>
                <div class="carousel-item h-100 w-100 bg-warning">
                    666666666666666666666
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>*@




@*<!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta author="Luc Thien Phong">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Universe</title>
    </head>
    <style>
        body {
            overflow: hidden;
            margin: 0;
        }

        #word img {
            width: 100px;
            position: absolute;
            margin: 10;
        }
    </style>

    <body>

        <script type="module">
            import * as THREE from "https://cdn.skypack.dev/three@0.136.0";
            import { OrbitControls } from "https://cdn.skypack.dev/three@0.136.0/examples/jsm/controls/OrbitControls";

            var defined = 'QXV0aG9yOiBMdWMg';
            var datacenter = ['aHR0cHM6L', 'y93d3cuZmF', 'jZWJvb2suY29t'];
            let scene = new THREE.Scene();
            scene.background = new THREE.Color('#160016');
            let camera = new THREE.PerspectiveCamera(60, innerWidth / innerHeight, 1, 1000);
            camera.position.set(0, 4, 21);
            let renderer = new THREE.WebGLRenderer();
            renderer.setSize(innerWidth, innerHeight);
            document.body.appendChild(renderer.domElement);
            window.addEventListener("resize", event => {
                camera.aspect = innerWidth / innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(innerWidth, innerHeight);
            })
            datacenter.push('L3Byb2ZpbGUu');
            let controls = new OrbitControls(camera, renderer.domElement);
            controls.enableDamping = true;
            controls.enablePan = false;
            datacenter.push('cGhwP2lkPTEw');
            let gu = {
                time: { value: 0 }
            }
            defined = defined.concat('VGhpZW4gUGhvbmc=');
            let sizes = [];
            let shift = [];
            let pushShift = () => {
                shift.push(
                    Math.random() * Math.PI,
                    Math.random() * Math.PI * 2,
                    (Math.random() * 0.9 + 0.1) * Math.PI * 0.1,
                    Math.random() * 0.9 + 0.1
                );
            }
            datacenter.push('MDA0NTQwNj');
            var context = atob(defined);
            let pts = new Array(50000).fill().map(p => {
                sizes.push(Math.random() * 1.5 + 0.5);
                pushShift();
                return new THREE.Vector3().randomDirection().multiplyScalar(Math.random() * 0.5 + 9.5);
            })
            for (let i = 0; i < 100000; i++) {
                let r = 10, R = 40;
                let rand = Math.pow(Math.random(), 1.5);
                let radius = Math.sqrt(R * R * rand + (1 - rand) * r * r);
                pts.push(new THREE.Vector3().setFromCylindricalCoords(radius, Math.random() * 2 * Math.PI, (Math.random() - 0.5) * 2));
                sizes.push(Math.random() * 1.5 + 0.5);
                pushShift();
            }
            console.log(context);
            datacenter.push('I2MTQ5MQ' + '==');
            let g = new THREE.BufferGeometry().setFromPoints(pts);
            g.setAttribute("sizes", new THREE.Float32BufferAttribute(sizes, 1));
            g.setAttribute("shift", new THREE.Float32BufferAttribute(shift, 4));
            let m = new THREE.PointsMaterial({
                size: 0.125,
                transparent: true,
                depthTest: false,
                blending: THREE.AdditiveBlending,
                onBeforeCompile: shader => {
                    shader.uniforms.time = gu.time;
                    shader.vertexShader = `
                            uniform float time;
                            attribute float sizes;
                            attribute vec4 shift;
                            varying vec3 vColor;
                            ${shader.vertexShader}
                        `.replace(
                        `gl_PointSize = size;`,
                        `gl_PointSize = size * sizes;`
                    ).replace(
                        `#include <color_vertex>`,
                        `#include <color_vertex>
                            float d = length(abs(position) / vec3(40., 10., 40));
                            d = clamp(d, 0., 1.);
                            vColor = mix(vec3(42,40,154), vec3(209,124,196), d) / 255.;
                        `).replace(
                            `#include <begin_vertex>`,
                            `#include <begin_vertex>
                            float t = time;
                            float moveT = mod(shift.x + shift.z * t, PI2);
                            float moveS = mod(shift.y + shift.z * t, PI2);
                            transformed += vec3(cos(moveS) * sin(moveT), cos(moveT), sin(moveS) * sin(moveT)) * shift.a;
                        `);
                    // console.log(shader.vertexShader);
                    shader.fragmentShader = `
                        varying vec3 vColor;
                        ${shader.fragmentShader}
                        `.replace(
                        `#include <clipping_planes_fragment>`,
                        `#include <clipping_planes_fragment>
                            float d = length(gl_PointCoord.xy - 0.5);
                            if (d > 0.5) discard;
                        `).replace(
                            `vec4 diffuseColor = vec4( diffuse, opacity );`,
                            `vec4 diffuseColor = vec4( vColor, smoothstep(0.5, 0.1, d) );`
                        );
                    // console.log(shader.fragmentShader);
                }
            });
            let p = new THREE.Points(g, m);
            p.rotation.order = "ZYX";
            p.rotation.z = 0.2;
            scene.add(p)
            const data = atob(datacenter.join(''));
            let clock = new THREE.Clock();
            console.log(data);
            renderer.setAnimationLoop(() => {
                controls.update();
                let t = clock.getElapsedTime() * 0.5;
                gu.time.value = t * Math.PI;
                p.rotation.y = t * 0.05;
                renderer.render(scene, camera);
            });
        </script>
    </body>

    </html>
    <div>
        @RenderBody()
    </div>*@




@*<div class="container">
        <div class="drag-area justify-content-center border-neutral-5 border-2 border-info w-100 flex-column flex align-content-center" style="border-radius:20px; padding:50px; border:dashed">
            <center><p style="font-size:25px;" class="keotha">Kẻo và thả để tải ảnh lên</p></center>
            <center><span>Hoặc</span></center>
            <center><button class="chonfile btn btn-outline-info w-25">Chọn file</button></center>
            <center><input class="ip" type="file" hidden /></center>

        </div>
        <center class="huyluu"></center>
        <center class="luu"></center>
    </div>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="~/js/KeoThaFileAnh.js"></script>*@







<!-- Chèn ảnh vào bằng kéo thả -->
@*<div class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
        Cập nhật ảnh đại diện
    </div>
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Cập nhật ảnh đại diện</h1>
                    <button style="color:black;" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" style="height:600px;">
                    <div class="container">
                        <div class="drag-area justify-content-center mx-auto text-center border-2 border-info w-100 h-100 flex align-content-center" style="border-radius:20px; padding:15px; border:dashed">
                            <div class="thaotac_load" style="margin-top:210px;">
                                <h1 style="font-size:20px; font-family:Arial;" class="keotha">Kéo và thả để tải ảnh lên</h1>
                                <p>hoặc</p>
                                <button class="chonfile btn btn-outline-info w-25">Chọn ảnh</button>
                                <input class="ip" type="file" hidden />
                            </div>
                            <img class="w-100 h-100 anh_load" src="#" style="display:none">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="huyluu" style="display:none;">
                        <button type="button" class="btn btn-outline-danger" onclick="resett()" data-bs-dismiss="modal">Hủy Lưu</button>
                    </div>
                    <div class="luu">

                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/js/ThemAnhSP.js"></script>*@


@*------------------------------------------------------------------------------------>*@


<!--<style>
    * {
        padding: 0;
        margin: 0;
        box-sizing: border-box;
    }

    body {
        display: flex;
        font-family: "Poppins", sans-serif;
    }

        body > div {
            margin: 5% auto 0;
            max-width: 720px;
        }

    .tabs {
        display: flex;
        position: relative;
    }

        .tabs .line {
            position: absolute;
            left: 0;
            bottom: 0;
            width: 0;
            height: 6px;
            border-radius: 15px;
            background-color: #c23564;
            transition: all 0.2s ease;
        }

    .tab-item {
        min-width: 80px;
        padding: 16px 20px 11px 20px;
        font-size: 20px;
        text-align: center;
        color: #c23564;
        background-color: #fff;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        border-bottom: 5px solid transparent;
        opacity: 0.6;
        cursor: pointer;
        transition: all 0.5s ease;
    }

    .tab-icon {
        font-size: 24px;
        width: 32px;
        position: relative;
        top: 2px;
    }

    .tab-item:hover {
        opacity: 1;
        background-color: rgba(194, 53, 100, 0.05);
        border-color: rgba(194, 53, 100, 0.1);
    }

    .tab-item.active {
        opacity: 1;
    }

    .tab-content {
        padding: 28px 0;
    }

    .tab-pane {
        color: #333;
        display: none;
    }

        .tab-pane.active {
            display: block;
        }

        .tab-pane h2 {
            font-size: 24px;
            margin-bottom: 8px;
        }

</style>
<div>-->
<!-- Tab items -->
<!--<div class="tabs">
    <div class="tab-item active">
        <i class="tab-icon fas fa-code"></i>
        React
    </div>
    <div class="tab-item">
        <i class="tab-icon fas fa-cog"></i>
        Angular
    </div>
    <div class="tab-item">
        <i class="tab-icon fas fa-plus-circle"></i>
        Ember
    </div>
    <div class="tab-item">
        <i class="tab-icon fas fa-pen-nib"></i>
        Vue.JS
    </div>
    <div class="line"></div>
</div>-->
<!-- Tab content -->
<!--<div class="tab-content">
        <div class="tab-pane active">
            <h2>React</h2>
            <p>React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.</p>
        </div>
        <div class="tab-pane">
            <h2>Angular</h2>
            <p>Angular is an application design framework and development platform for creating efficient and sophisticated single-page apps.</p>
        </div>
        <div class="tab-pane">
            <h2>Ember</h2>
            <p>Ember.js is a hí aweapdjla l=ô loe lờ lớp du yêu em productive, battle-tested JavaScript framework for building modern web applications. It includes everything you need to build rich UIs that work on any device.</p>
        </div>
        <div class="tab-pane">
            <h2>Vue.js</h2>
            <p>Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. </p>
        </div>
    </div>
</div>
<script src="~/js/Tab_TuyBien.js"></script>-->
@*<style>
        .tabss {
            display: flex;
            position: relative;
        }

            .tabss .line {
                position: absolute;
                left: 0;
                bottom: 0;
                width: 0;
                height: 6px;
                border-radius: 15px;
                background-color: #c23564;
                transition: all 0.2s ease;
            }

        .tab-itemm {
            min-width: 80px;
            padding: 16px 20px 11px 20px;
            font-size: 20px;
            text-align: center;
            color: #c23564;
            background-color: #fff;
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
            border-bottom: 5px solid transparent;
            opacity: 0.6;
            cursor: pointer;
            transition: all 0.5s ease;
        }

        .tab-iconn {
            font-size: 24px;
            width: 32px;
            position: relative;
            top: 2px;
        }

        .tab-itemm:hover {
            opacity: 1;
            background-color: rgba(194, 53, 100, 0.05);
            border-color: rgba(194, 53, 100, 0.1);
        }

        .tab-itemm.activee {
            opacity: 1;
        }

        .tab-contentt {
            padding: 28px 0;
        }

        .tab-panee {
            color: #333;
            display: none;
        }

            .tab-panee.activee {
                display: block;
            }

            .tab-panee h2 {
                font-size: 24px;
                margin-bottom: 8px;
            }
    </style>
    <div>
        <!-- Tab items -->
        <div class="tabss">
            <div class="tab-itemm activee">
                <i class="tab-icon fas fa-code"></i>
                React
            </div>
            <div class="tab-itemm">
                <i class="tab-icon fas fa-cog"></i>
                Angular
            </div>
            <div class="tab-itemm">
                <i class="tab-icon fas fa-plus-circle"></i>
                Ember
            </div>
            <div class="tab-itemm">
                <i class="tab-icon fas fa-pen-nib"></i>
                Vue.JS
            </div>
            <div class="line"></div>
        </div>

        <!-- Tab content -->
        <div class="tab-contentt">
            <div class="tab-panee activee">
                <h2>React</h2>
                <p>React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.</p>
            </div>
            <div class="tab-panee">
                <h2>Angular</h2>
                <p>Angular is an application design framework and development platform for creating efficient and sophisticated single-page apps.</p>
            </div>
            <div class="tab-panee">
                <h2>Ember</h2>
                <p>Ember.js is a hí aweapdjla l=ô loe lờ lớp du yêu em productive, battle-tested JavaScript framework for building modern web applications. It includes everything you need to build rich UIs that work on any device.</p>
            </div>
            <div class="tab-panee">
                <h2>Vue.js</h2>
                <p>Vue (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. </p>
            </div>
        </div>
    </div>
    <script src="~/js/Tab_TuyBien.js"></script>*@


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Simple Carousel</title>
    <link rel="stylesheet" href="style.css">
    <style>
  /*      * {
            box-sizing: border-box;
            padding: 0;
            margin: 0;
            font-family: sans-serif;
        }

        body {
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background-image: linear-gradient(145deg, #413579, #632a4c);
        }*/

        .wrapper {
            margin: 0 100px;
            overflow: hidden;
            white-space: nowrap;
            user-select: none;
            cursor: pointer;
            border: 2px solid #dadada;
            padding: 20px;
            overflow-x: auto;
        }

            .wrapper::-webkit-scrollbar {
                width: 0;
            }

        .box {
            width: 200px;
            height: 400px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 60px;
            color: white;
            background-color: #7043a5;
            margin: 0 10px;
        }

    </style>
</head>
<body>
    <div class="wrapper">
        <div class="box">01</div>
        <div class="box">02</div>
        <div class="box">03</div>
        <div class="box">04</div>
        <div class="box">05</div>
        <div class="box">06</div>
        <div class="box">07</div>
        <div class="box">08</div>
        <div class="box">09</div>
        <div class="box">10</div>
        <div class="box">11</div>
        <div class="box">12</div>
        <div class="box">13</div>
        <div class="box">14</div>
        <div class="box">15</div>
        <div class="box">16</div>
        <div class="box">17</div>
        <div class="box">18</div>
        <div class="box">19</div>
        <div class="box">20</div>
        <div class="box">21</div>
        <div class="box">22</div>
        <div class="box">23</div>
        <div class="box">24</div>
        <div class="box">25</div>
    </div>

    <script src="app.js"></script>
</body>
</html>
<script>
    const wrapper = document.querySelector('.wrapper')
    let isMouseDown = false
    let startX, scrollLeft

    wrapper.addEventListener('mousedown', (e) => {
        isMouseDown = true
        startX = e.pageX - wrapper.offsetLeft
        scrollLeft = wrapper.scrollLeft
    })

    wrapper.addEventListener('mouseleave', () => {
        isMouseDown = false
    })

    wrapper.addEventListener('mouseup', () => {
        isMouseDown = false
    })

    wrapper.addEventListener('mousemove', (e) => {
        if (!isMouseDown) return

        const x = e.pageX - wrapper.offsetLeft
        // 3 là tốc độ scroll
        const walk = (x - startX) * 3
        wrapper.scrollLeft = scrollLeft - walk
    })

</script>


<div class="col-6">
    <button style="color:black;outline: none; border: none;background-color: transparent;">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-car-front-fill" viewBox="0 0 16 16">
            <path d="M2.52 3.515A2.5 2.5 0 0 1 4.82 2h6.362c1 0 1.904.596 2.298 1.515l.792 1.848c.075.175.21.319.38.404.5.25.855.715.965 1.262l.335 1.679c.033.161.049.325.049.49v.413c0 .814-.39 1.543-1 1.997V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.338c-1.292.048-2.745.088-4 .088s-2.708-.04-4-.088V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.892c-.61-.454-1-1.183-1-1.997v-.413a2.5 2.5 0 0 1 .049-.49l.335-1.68c.11-.546.465-1.012.964-1.261a.807.807 0 0 0 .381-.404l.792-1.848ZM3 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm10 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM6 8a1 1 0 0 0 0 2h4a1 1 0 1 0 0-2H6ZM2.906 5.189a.51.51 0 0 0 .497.731c.91-.073 3.35-.17 4.597-.17 1.247 0 3.688.097 4.597.17a.51.51 0 0 0 .497-.731l-.956-1.913A.5.5 0 0 0 11.691 3H4.309a.5.5 0 0 0-.447.276L2.906 5.19Z" />
        </svg>Giao Hỏa Tốc
    </button>

    <h4>nội dung</h4>
    <!-- Vertically centered modal -->
    <select class="form-select" aria-label="Default select example">
        <option selected>Open color</option>
        <option value="1">One</option>
        <option value="2">Two</option>
        <option value="3">Three</option>
    </select>
</div>